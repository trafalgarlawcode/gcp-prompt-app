apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-app
  labels:
    app: test-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: test-app
  template:
    metadata:
      labels:
        app: test-app
    spec:
      containers:
      # Main application container
      - name: test-app
        image: europe-central2-docker.pkg.dev/graphite-store-460210-d9/docker-repo/test-app:latest
        ports:
        - containerPort: 5000
        env:
        - name: DB_HOST
          value: "127.0.0.1"  # Connect via local proxy
        - name: DB_PORT
          value: "3306"
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: password
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: database

      # Cloud SQL Proxy sidecar container
      - name: cloud-sql-proxy
        image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.6.1
        args:
          - "--private-ip"
          - "graphite-store-460210-d9:europe-central2:test-sql-instance"
        securityContext:
          runAsNonRoot: true

---
apiVersion: v1
kind: Service
metadata:
  name: test-app-service
spec:
  type: LoadBalancer
  selector:
    app: test-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000
