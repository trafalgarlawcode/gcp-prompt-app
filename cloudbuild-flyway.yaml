steps:
  # Build Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - build
      - '-t'
      - '$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPO_NAME/$_IMAGE_NAME:$COMMIT_SHA'
      - .
    id: Build

  # Push Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - push
      - '$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPO_NAME/$_IMAGE_NAME:$COMMIT_SHA'
    id: Push

  # Run Flyway migrations using Cloud SQL Proxy sidecar
  - name: 'flyway/flyway'
    args: ['-configFiles=/flyway/conf/flyway.conf', 'migrate']
    env:
      - 'FLYWAY_URL=jdbc:mysql://127.0.0.1:3306/test-db'
      - 'FLYWAY_USER=_DB_USER'
      - 'FLYWAY_PASSWORD=_DB_PASSWORD'
    entrypoint: 'flyway'
    volumes:
      - name: 'cloud-sql-proxy'
        path: '/cloudsql'
    id: Migrate
    waitFor: ['Build']

  # Start Cloud SQL Proxy as sidecar
  - name: 'gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.6.1'
    args:
      - '--private-ip'
      - '$_PROJECT_ID:$_REGION:$_CLOUD_SQL_INSTANCE_NAME'
      - '-p'
      - '3306'
    id: Proxy
    entrypoint: 'sh'
    args:
      - '-c'
      - |
        /cloud-sql-proxy $$@ &
        sleep 5  # Wait for proxy to initialize
    volumes:
      - name: 'cloud-sql-proxy'
        path: '/cloudsql'

  # Deploy to GKE
  - name: 'gcr.io/cloud-builders/gke-deploy'
    args:
      - run
      - --filename=./kubernetes/deployment.yaml
      - --image=${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPO_NAME}/${_IMAGE_NAME}:$COMMIT_SHA
      - --location=${_CLUSTER_LOCATION}
      - --cluster=${_CLUSTER_NAME}
    id: Deploy
    waitFor: ['Migrate']

options:
  logging: CLOUD_LOGGING_ONLY
  env:
    - '_CLOUD_SQL_INSTANCE_NAME=test-sql-instance'
    - '_DB_USER=projects/$PROJECT_ID/secrets/db-user/versions/latest'
    - '_DB_PASSWORD=projects/$PROJECT_ID/secrets/db-password/versions/latest'

images:
  - '$_REGION-docker.pkg.dev/$PROJECT_ID/$_REPO_NAME/$_IMAGE_NAME:$COMMIT_SHA'
